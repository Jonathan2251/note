// clone specific branch 13.x
git clone -b <branch> <repo>
e.g. git clone -b 13.x https://github.com/llvm/llvm-project.git
// checkout specific tag llvmorg-13.0.0
git clone -b <tag> <repo>
e.g. git clone -b llvmorg-13.0.0 https://github.com/llvm/llvm-project.git
// ref. https://www.jiyik.com/w/git/git-clone

// workbranch rebase to master
git checkout workbranch
// git merge the commits from #num into 1
git reset --soft #num
git commit -m "<the merged descripition>"
git push -f
git rebase master workbranch // master's new changes to bottom of workbranch
git rebase workbranch master // move head of master to top of workbranch

// add tag
git tag -l
git tag -a release_12_0_6 -m "release version 12.0.6"
git push origin release_12_0_6
git ls-remote --tags origin   // see remote tags
git push --delete origin tagname
git tag --delete tagname


// Biren steps
// on master branch
git remote add dev git@github01.birentech.com:e00241/llvm-project.git
git remote -v // see attached remote repo
git fetch dev
git fetch origin // get the latest origin/master HEAD
git checkout issue#
// after work on the issue# branch
git add; git commit; -> trigger clang-format installed in ~/git/llvm-project/.git/hooks/pre-commit, http://10.50.16.70:8090/display/SOF/tools, (please merge commit into single one commit)
git rebase origin/master
git push dev // push to dev/issue#
// go to https://github01.birentech.com/software/llvm-project/ and create merge request
// after CTS-verification and approve, select squash-merge or rebase-merge botton and click the botton, then it merges into origin/master

// git Subject's rules
https://chris.beams.io/posts/git-commit/

The seven rules of a great Git commit message

Separate subject from body with a blank line
	Limit the subject line to 50 characters
	Capitalize the subject line
	Do not end the subject line with a period
	Use the imperative mood in the subject line
	Wrap the body at 72 characters
	Use the body to explain what and why vs. how



// get someone's Pull Request
// in master of orgin branch
git pull origin pull/732/head

Delete remote first, then local
// delete remote branch
git push origin --delete <branch>
ex. git push origin --delete jonathan_fix_bug_a
git remote update origin --prune
// delete local branch
git branch -D <branch>

// attach dev branch
git remote add dev git@github01.birentech.com:e00241/llvm-project.git
git remote -v // see attached remote repo
git fetch dev
// checkout remote dev e00241 branch
git checkout -b e00241 origin/e00241
// push to dev
git push dev

// create local new branch
git checkout -b <branch>
// create remote branch
git push --set-upstream origin <branch>

// git merge the last 4 commits into 1
git reset --soft HEAD~4
git commit -m "<the merged descripition>"
git push dev e00241

// check email
git config --global user.email
// set email
git config --global user.email "email address"

// set config
vi .git/config 
or git config user.email "gamma_chen@yahoo.com.tw"
